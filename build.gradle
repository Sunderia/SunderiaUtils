plugins {
    id 'java'
    id 'maven-publish'
    id "de.undercouch.download" version "5.0.2"
    id 'com.github.breadmoirai.github-release' version '2.3.7'
}

apply from: rootProject.file('specialSource.gradle')
apply from: rootProject.file('buildtools.gradle')

group 'fr.sunderia'
version '1.5.7-SNAPSHOT'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    mavenCentral()
    maven {
        name = "Spigot-Repo"
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = "Jeff"
        url = 'https://hub.jeff-media.com/nexus/repository/jeff-media-public/'
    }
    mavenLocal()
}

dependencies {
    compileOnly('org.spigotmc:spigot-api:1.18.1-R0.1-SNAPSHOT')
    compileOnly 'org.spigotmc:spigot:1.18.1-R0.1-SNAPSHOT:remapped-mojang'
    compileOnly('org.jetbrains:annotations:23.0.0')
    implementation 'com.jeff_media:ArmorEquipEvent:1.0.0'
}

compileJava {
    options.encoding('UTF-8')
}

java {
    withJavadocJar()
    withSourcesJar()
}

afterEvaluate {
    jar {
        doLast {
            def outputFiles = outputs.files.files
            for (inputFile in outputFiles) {
                File intermediateFile = new File(temporaryDir, inputFile.name.replace('.jar', '-obf.jar'))
                File outputFile = inputFile
                remapMojangToSpigot(inputFile, intermediateFile, outputFile, "1.18.1-R0.1-SNAPSHOT")
            }
        }
    }
}

test {
    useJUnitPlatform()
}

javadoc {
    options.addBooleanOption('html5', true)
}

githubRelease {
    setToken(System.getenv("GITHUB_TOKEN") ?: GITHUB_TOKEN)
    releaseAssets(jar.archiveFile, sourcesJar.archiveFile, javadocJar.archiveFile)
}

if(System.getenv("GITHUB_TOKEN") != null || hasProperty("GITHUB_TOKEN")) {
    publish.dependsOn(tasks.getByName('githubRelease'))
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            from components.java
            pom {
                name = project.name
                description = project.description
                url = "https://github.com/Sunderia/SunderiaUtils"
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'minemobs'
                        name = 'minemobs'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name 'sunderiaRepo'
            def extension = version.toString().endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'
            url 'https://maven.thesimpleteam.net/' + extension
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}